unit Second;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs;

type

  TForm1 = class(TForm)
  private
    { Private declarations }
  public
    { Public declarations }
  end;

  TEngine = (DIESEL, TURBO_DIESEL, ELECTRIC_MOTOR, HIBRID);
  TColorCoachbuilder = (WHITE, BLACK, RED, GREEN, BLUE);
  TCoachbuilder = (TRUCK, CAR, WAGGON, OFF_ROAD, BUS);
  TChassis = (FOUR, SIX, EIGHT, TEN);

  TAutomobile = class
  private
    Engine: TEngine;
    Coachbuilder: TCoachbuilder;
    Chassis: TChassis;
    ColorBody: TColorCoachbuilder;

  public

    constructor Create(Engine: TEngine; Coachbuilder: TCoachbuilder;
      Chassis: TChassis; ColorBody: TColorCoachbuilder); override;
  end;


  // TAutomobile = class
  // private
  // Engine : TEngineType;
  // Coachbuilder : TCoachbuilderType;
  // Chassis : Integer;
  // ColorBody : TColorType;

  // public
  // constructor Create(Engine : TEngineType;);
  // end;

var
  Form1: TForm1;

implementation

{$R *.dfm}
{ TAutomobile }

{ TAutomobile }

constructor TAutomobile.Create(Engine: TEngine; Coachbuilder: TCoachbuilder;
  Chassis: TChassis; ColorBody: TColorCoachbuilder);
begin
  inherited;
  self.Engine := Engine;
  self.Coachbuilder := Coachbuilder;
  self.Chassis := Chassis;
  self.ColorBody
end;

end.
